AWSTemplateFormatVersion: 2010-09-09
Description: Generates a bucket, a CodeBuild project, a role for the codebuild that gives auth to access to logs and to the bucket
Parameters:
  S3BucketName:
    Type: String
    Description: Name of the S3 static website bucket
  GitHubRepoUrl:
    Description: URL of the GitHub repository to build
    Type: String
  GitHubBranch:
    Description: Branch to build from the GitHub repository
    Type: String
  GitHubAccessToken:
    Description: Access token for the Github repository
    Type: String
Resources:
  S3BucketForWebsiteContent:
    Type: 'AWS::S3::Bucket'
    Properties:
      #AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      BucketName: !Ref S3BucketName
  UserPool:
    Type: 'AWS::Cognito::UserPool'
    Properties:
      UserPoolName: market-analysis-user-pool 
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
  # This is the role thatthe user will get after being authenticated by Cognito
  CognitoAuthorizedRole:
    Type: 'AWS::IAM::Role'
    Properties:
      # This is the trust policy of the role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Federated: "cognito-identity.amazonaws.com"
            Action:
              - "sts:AssumeRole"
            Condition:
              StringEquals:
                "cognito-identity.amazon.com:aud" : !Ref IdentityPool
              "ForAnyValue:StringLike":
                "cognito-identity.amazonaws.com:amr": authenticated
      Policies:
        - PolicyName: allowS3Access
          PolicyDocument:
            Version: "2021-10-17"
            Statement:
              - Effect: Allow
                Action: 's3:GetObject'
                Resource: !Ref S3BucketForWebsiteContent
  IdentityPoolRoleMapping:
    Type: "AWS::Cognito::IdentityPoolRoleAttachment"
    Properties:
      IdentityPoolId: !Ref IdentityPool
      Roles:
        authenticated: !GetAtt CognitoAuthorizedRole.Arn
  IdentityPool:
    Type: 'AWS::Cognito::IdentityPool'
    Properties:
      IdentityPoolName: 'market-analysis-identity-pool' 
      CognitoIdentityProviders:
        - ClientId: !Ref UserPool
          ProviderName: !GetAtt UserPool.ProviderName
      SupportedLoginProviders: {}
  UserPoolClient:
    Type: 'AWS::Cognito::UserPoolClient'
    Properties:
      ClientName: 'market-analysis-user-client'
      UserPoolId: !Ref UserPool
      GenerateSecret: false 
      ExplicitAuthFlows:
        - USER_PASSWORD_AUTH
  CBProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: "Market-Analyzer"
      Artifacts:
        Type: "S3"
        Location: !Ref S3BucketForWebsiteContent
        EncryptionDisabled: true
        Name: "/"
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/standard:5.0'
        Type: 'LINUX_CONTAINER'
        EnvironmentVariables:
          - Name: GITHUB_REPO_URL
            Value: !Ref GitHubRepoUrl
          - Name: GITHUB_BRANCH
            Value: !Ref GitHubBranch
          - Name: GITHUB_ACCESS_TOKEN
            Value: !Ref GitHubAccessToken
      Source:
        Type: 'GITHUB'
        Location: !Ref GitHubRepoUrl
        Auth:
          Type: 'OAUTH'
      ServiceRole: !Ref CodeBuildServiceRole
  CodeBuildSourceCredential:
    Type: "AWS::CodeBuild::SourceCredential"
    Properties:
      AuthType: "PERSONAL_ACCESS_TOKEN"
      ServerType: "GITHUB"
      Token: !Ref GitHubAccessToken

  CodeBuildServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: '/'
      Policies:
        - PolicyName: codebuild-service
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - 's3:ListBucket'
                  - 's3:GetObject'
                  - 's3:PutObject'
                Resource: !Sub 'arn:aws:s3:::${S3BucketName}/*'
Outputs:
  BucketURL:
    Value: !GetAtt S3BucketForWebsiteContent.WebsiteURL
    Description: Name of S3 bucket to hold website content

